{% import "@VSApplication/Macros/tree.html.twig" as vs_tree %}

{{ form_start(form, { 'action': path('vs_application_taxonomy_taxon_handle', {'taxonomyId': taxonomyId}) }) }}
    {% if form_errors(form) is not empty %}
        <div class="alert alert-block alert-danger fade in">
            <button type="button" class="close close-sm" data-dismiss="alert">
                <i class="icon-remove"></i>
            </button>
            <strong>{{ 'vs_application.form.errors_title' | trans( {},'VSApplicationBundle' ) }}</strong> {{ form_errors(form) }}
        </div>
    {% endif %}

    {% set comboDataSourceUrl  = url( 'vs_application_taxonomy_taxons_easyui_combotree', {'taxonomyId': taxonomyId} ) %}
    <div class="form-group">
        {{ form_label(form.parentTaxon, null, {
            'label_attr': {'class': 'col-form-label'}
            }) 
        }}
        
        {{ vs_tree.easyuiCombobox( form.parentTaxon, comboDataSourceUrl, taxonomyId,
            {
                'elementSelector': '#user_role_form_parent',
                'required': 'true',
                'multiple': 'false',
                'checkbox': 'false',
                'placeholder': ''
            }
        ) }}
    </div>

    <div class="form-group">
        {{ form_label(form.name, null, {
            'label_attr': {'class': 'col-form-label'}
            }) 
        }}
        {{ form_widget(form.name, {'attr': {'class': 'form-control'}}) }}
    </div>
    
    <div class="form-group">
        {{ form_label(form.description, null, {
            'label_attr': {'class': 'col-form-label'}
            }) 
        }}
        {{ form_widget(form.description, {'attr': {'class': 'form-control'}}) }}
    </div>
    
    {% do form.btnSave.setRendered() %}
    {% do form.btnCancel.setRendered() %}
{{ form_end(form) }}
